// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bulbview.recipeplanner.web.ui;

import com.bulbview.recipeplanner.domain.IngredientQuantity;
import com.bulbview.recipeplanner.web.EntityTableColumnGenerator;
import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.lang.Class;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect IngredientQuantityView_Roo_VaadinEntityView {
    
    public String IngredientQuantityView.getEntityName() {
        return "Ingredient Quantity";
    }
    
    public Class<IngredientQuantity> IngredientQuantityView.getEntityClass() {
        return IngredientQuantity.class;
    }
    
    public boolean IngredientQuantityView.isCreateAllowed() {
        return true;
    }
    
    public boolean IngredientQuantityView.isUpdateAllowed() {
        return true;
    }
    
    public boolean IngredientQuantityView.isDeleteAllowed() {
        return true;
    }
    
    public List<IngredientQuantity> IngredientQuantityView.listEntities() {
        List<IngredientQuantity> list = IngredientQuantity.findAllIngredientQuantitys();
        return list;
    }
    
    public IngredientQuantity IngredientQuantityView.saveEntity(IngredientQuantity entity) {
        if (entity == null) {
            return null;
        }
        return (IngredientQuantity) entity.merge();
    }
    
    public void IngredientQuantityView.deleteEntity(IngredientQuantity entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean IngredientQuantityView.isNewEntity(IngredientQuantity entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String IngredientQuantityView.getIdProperty() {
        return "id";
    }
    
    public String IngredientQuantityView.getVersionProperty() {
        return "version";
    }
    
    public IngredientQuantity IngredientQuantityView.createEntityInstance() {
        return new IngredientQuantity();
    }
    
    public BeanContainer<Long, IngredientQuantity> IngredientQuantityView.getTableContainer() {
        BeanContainer<Long, IngredientQuantity> container = new BeanContainer<Long, IngredientQuantity>(IngredientQuantity.class);
        container.setBeanIdProperty("id");
        for (IngredientQuantity entity : IngredientQuantity.findAllIngredientQuantitys()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item IngredientQuantityView.getItemForEntity(IngredientQuantity entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<IngredientQuantity>(entity);
        }
        return item;
    }
    
    public IngredientQuantity IngredientQuantityView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<IngredientQuantity>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object IngredientQuantityView.getIdForEntity(IngredientQuantity entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void IngredientQuantityView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("ingredient");
        table.addGeneratedColumn("ingredient", new EntityTableColumnGenerator((String) getIngredientCaptionPropertyId()));
    }
    
    public Object IngredientQuantityView.getIngredientCaptionPropertyId() {
        return "name";
    }
    
}
