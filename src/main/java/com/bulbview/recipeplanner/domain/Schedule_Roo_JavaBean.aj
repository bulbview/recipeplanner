// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bulbview.recipeplanner.domain;

import com.bulbview.recipeplanner.domain.Recipe;
import com.google.appengine.api.datastore.Key;
import com.google.appengine.api.datastore.KeyFactory;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.ManyToMany;
import javax.persistence.Transient;

privileged aspect Schedule_Roo_JavaBean {
    
    declare @field: * Schedule.recipes: -@ManyToMany;
    
    declare @field: * Schedule.recipes: @Transient;
    
    private Set<Key> Schedule.recipesKeys = new HashSet<Key>();
    
    public Date Schedule.getStartDate() {
        return this.startDate;
    }
    
    public void Schedule.setStartDate(Date startDate) {
        this.startDate = startDate;
    }
    
    public Set<Recipe> Schedule.getRecipes() {
        Set<com.bulbview.recipeplanner.domain.Recipe> localRecipes = new HashSet<com.bulbview.recipeplanner.domain.Recipe>();
        for (Key key : recipesKeys) {
            Recipe entity = Recipe.findRecipe(key.getId());
            if (entity != null) {
                localRecipes.add(entity);
            }
        }
        this.recipes = localRecipes;
        return localRecipes;
    }
    
    public void Schedule.setRecipes(Set<Recipe> recipes) {
        Set<com.bulbview.recipeplanner.domain.Recipe> localRecipes = new HashSet<com.bulbview.recipeplanner.domain.Recipe>();
        List<Long> longIds = new ArrayList<Long>();
        for (Key key : recipesKeys) {
            if (!longIds.contains(key.getId())) {
                longIds.add(key.getId());
            }
        }
        for (Recipe entity : recipes) {
            if (!longIds.contains(entity.getId())) {
                longIds.add(entity.getId());
                recipesKeys.add(KeyFactory.createKey(Recipe.class.getName(), entity.getId()));
            }
            localRecipes.add(entity);
        }
        this.recipes = localRecipes;
    }
    
}
